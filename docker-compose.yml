version: '3.8'

services:
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend/app:/app
    ports:
      - "80:80"
    networks:
      - article-express-network
    depends_on:
      - cassandra
    env_file:
      - ./backend/.env.backend

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.11-management
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ./storage/rabbitmq/data/:/var/lib/rabbitmq/
        - ./storage/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - article-express-network
    env_file:
      - ./rabbitmq/.env.rabbitmq

  crawler:
    container_name: crawler
    build:
      context: ./web_crawler
      dockerfile: Dockerfile
    volumes:
      - ./web_crawler/celery_worker:/celery_worker
    networks:
      - article-express-network
    env_file:
      - ./web_crawler/.env.crawler
    depends_on:
      - rabbitmq

  postgres:
    container_name: postgres
    image: postgres:14
    volumes:
      - ./storage/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - article-express-network
    env_file:
      - ./postgres/.env.postgres

  cassandra:
    image: cassandra:4.1.2
    volumes:
      - ./storage/cassandra:/var/lib/cassandra
    ports:
      - "9042:9042"
    networks:
      - article-express-network
    environment:
      - CQLENG_ALLOW_SCHEMA_MANAGEMENT=1

  jupyter-notebook:
    image: jupyter/datascience-notebook
    volumes:
      - ./jupyter-notebook/work:/work
    ports:
      - "8888:8888"
    networks:
      - article-express-network

networks:
  article-express-network:
    driver: bridge
